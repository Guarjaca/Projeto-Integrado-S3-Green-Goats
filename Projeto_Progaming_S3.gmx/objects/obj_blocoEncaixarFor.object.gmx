<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blocoEncaixarFor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicialização de variáveis

pego =  false;
blocoLigado = noone;
ligado = false;
image_speed = 0;

//Comando que a peça mandará executar
comandoCiclos = 10;

//Variáveis para lidar com a ordenação de instruções
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variáveis para voltar à posição inicial caso posicionado no local errado

xInicial = x;
yInicial = y;

caminhoVolta = path_add();
voltando = false;
voltou = true;

path_add_point(caminhoVolta, xInicial, yInicial, 100);
path_add_point(caminhoVolta, x, y, 100);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movimento

if (instance_exists(obj_MenuOpcoes)==false &amp;&amp; instance_exists(obj_concluir)==false &amp;&amp; instance_exists(obj_objetivos)==false){

click = mouse_check_button(mb_left)
justClicked = mouse_check_button_pressed(mb_left);

//===================================
//Identificar a quem vai conectar
if (voltando == false &amp;&amp; obj_bloco.alocado == true){
    if (place_meeting(x, y, obj_lado)){
        blocoLigado = instance_place(x, y, obj_lado).blocoPai;
    }else{
        blocoLigado = noone
    }
}
//===================================
//Realizar o movimento
if(pego == true){
    x = mouse_x - 16;
    y = mouse_y;
    //show_debug_message("obj_encaixar diz: Fui pego!")
    path_change_point(caminhoVolta, 1, x, y, 100);
    
    if(ligado == true){
        blocoLigado.conectado = false;
        ligado = false;
    }

}else {
    //Realizar a ligação
    if(blocoLigado != noone){
        ligado = true;
    }else{//Desligar o bloco
        ligado = false;
        //Fazer o caminho de volta
        if (place_meeting(x, y, obj_areaProibida) == true){
            if(voltando == false){
                path_start(caminhoVolta, 100, path_action_stop, true);
                voltando = true;
            }else{
                if(x == xInicial &amp;&amp; y == yInicial){
                    voltando = false;
                }
            }
        }else{
            if(x == xInicial &amp;&amp; y == yInicial){
                voltando = false;
            }
        }
        
    }
    //pego = false;
    //==================================================
    
}


}

if (ligado == true){//Dar snap para as posições do bloco que está ligado
    x = blocoLigado.x + 28;
    y = blocoLigado.y + 17;
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Paassar o comando que têm para executar

if (ligado == true){
    blocoLigado.conectado = true;
    blocoLigado.ciclosLasso = comandoCiclos;  
    //blocoLigado.objConectado = self;
    //show_debug_message("obj_blocoEncaixar diz: eu passei pelo if: " + string(blocoLigado.blocoPai.ordemConector) )
    //show_debug_message("obj_blocoEncaixar diz: " + string(blocoLigado.blocoPai.comandoConector));
    //show_debug_message("obj_blocoEncaixarFor diz: estou ligado" );
    if (vencer == true){
        depth = -6;
    }
}


//show_debug_message("obj_blocoEncaixar diz: " + string(comandoCiclos));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Soltar a peça
pego = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pego = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Desenhar que peças são

draw_self();
draw_set_colour(c_black);

switch(comandoCiclos){
    case 5:
        image_index = 1;
        break;
    case 10:
        image_index = 2;
        break;
    case 20:
        image_index = 3;
        break;
    default:
        image_index = 0;
        draw_text(x + 12, y - 5, comandoCiclos + string("ciclos"))
        break;
}  
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
