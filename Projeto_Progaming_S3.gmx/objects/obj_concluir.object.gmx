<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Concluir</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tocar o som da vitoria

audio_play_sound(sound_vencer, 1, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ajuste de posição
/*
x = room_width/2 - sprite_width/2;
y = room_height/2 - sprite_height/2;
*/

x = 0;
y = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Desenhar a resposta

draw_self();
/*
xA = room_width/2 - 200;
yA = room_height/2 - 120;
draw_sprite(spr_bloco, 0, xA, yA);

xA += -46 + 25
yA += 37 + sprite_get_height(spr_conector)/2;

conectores = qntdConectores;
for(i=0; i&lt;conectores; i++){
    lista[i] = obj_bloco.listaConectores[i];
}

for(i=0; i&lt;conectores; i++){
    draw_sprite(spr_conector, 0, xA, yA);
    src_desenharConc(lista, lista[i].comandoConector)
    yA += sprite_get_height(spr_conector)
}
*/
if (instance_exists(obj_bloco)){
    obj_bloco.depth = -6;
}
if(instance_exists(obj_conector)){
    obj_conector.depth = -6;
}/*
if (instance_exists(obj_blocoEncaixar)){
    if (obj_blocoEncaixar.ligado == true){
        obj_blocoEncaixar.depth = -6;
    }
}*/
/*
if (instance_exists(obj_blocoEncaixarFor)){
    if (obj_blocoEncaixarFor.ligado == true){
        obj_blocoEncaixarFor.depth = -6;
    }
}
*/
/*
if (instance_exists(obj_blocoSe)){
    obj_blocoSe.depth = -6;
}
*/
if (instance_exists(obj_blocoEncaixarSe)){
    if (obj_blocoEncaixarSe.ligado == true){
        obj_blocoEncaixarSe.depth = -6;
    }
}
if (instance_exists(obj_seConector)){
    obj_seConector.depth = -6;
}



obj_bloco.x = room_width/2 - 240;
obj_bloco.y = room_height/2 - 80;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Desenhar o texto do código

draw_set_font(font1);
draw_set_colour($362F29);

xTexto = room_width/2 + 60;
yTexto = room_height/2 - 120;
esp = font_get_size(font1);

draw_text(xTexto, yTexto, "batidas = 0; ");
draw_text(xTexto, yTexto + esp*1, "fermento = false; ");
draw_text(xTexto, yTexto + esp*2, "farinha = false; #");
draw_text(xTexto, yTexto + esp*3, "for (int i=0; i&lt;" + string(maxCiclos) + "; i++){");

mEsp = esp*4;
dentroSe = false;
for(i=0; i&lt;qntdConectores; i++){
    comando = listaComandos[i];
    subComando = 0;
    scr_escreveConc(xTexto + esp, yTexto, comando)
    /*
    if(dentroSe == true){
        var listaSubComandos;
        for(j=0; j&lt;obj_blocoSe.qntdSubConectores; j++){
            listaSubComandos[j] = obj_blocoSe.listaSubConectores[j].comandoConector;
        }
        for(j=0; j&lt;obj_blocoSe.qntdSubConectores; j++){
            scr_escreveConc(xTexto, yTexto, listaSubComandos[j]);
        }
        dentroSe = false;
    }
    */
    
}

draw_text(xTexto, yTexto + mEsp, "}");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
