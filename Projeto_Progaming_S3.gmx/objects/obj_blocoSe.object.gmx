<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_if</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicializar o objeto de colisão

ladoDireito = instance_create(x,y,obj_ladoSe);
with(ladoDireito){ 
    blocoPai = noone;
}   
ladoDireito.blocoPai = self;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sub-conectores

comando = SE;
comandoSe = false;

listaSubConectores = array_create(0);
qntdSubConectores = 0;

x0SubConectores = x + 17 + 24;
y0SubConectores = y + sprite_get_height(spr_if) + sprite_get_height(spr_ifConector)/2 - 17
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variáveis para a própria conexão

ligado = false;
alocado = false;
conectado = false;//Variável para checar se tem uma peça de condição conectada
blocoLigado = noone;

pego = false;
voltando = false;
xInicial = x;
yInicial = y;

caminhoVolta = path_add();

path_add_point(caminhoVolta, xInicial, yInicial, 100);
path_add_point(caminhoVolta, x, y, 100);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Criação e destruição dos subconectores

if (qntdSubConectores &gt; 0){
    if(listaSubConectores[qntdSubConectores - 1].conectado == true){
        listaSubConectores[qntdSubConectores] = instance_create(listaSubConectores[qntdSubConectores - 1].x, listaSubConectores[qntdSubConectores - 1].y + sprite_get_height(spr_ifConector), obj_seConector);
        listaSubConectores[qntdSubConectores].ordem = qntdSubConectores
        qntdSubConectores += 1;
    }
    if(qntdSubConectores &gt; 1){
        if(listaSubConectores[qntdSubConectores - 2].conectado == false){
            instance_destroy(listaSubConectores[qntdSubConectores - 1]);
            qntdSubConectores -= 1;
        }
    }
}else {
    if(alocado == true){
        listaSubConectores[qntdSubConectores] = instance_create(x0SubConectores, y0SubConectores, obj_seConector);
        listaSubConectores[qntdSubConectores].ordem = qntdSubConectores
        qntdSubConectores += 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movimento
if (instance_exists(obj_MenuOpcoes)==false &amp;&amp; instance_exists(obj_concluir)==false &amp;&amp; instance_exists(obj_objetivos)==false){

click = mouse_check_button(mb_left);
justClicked = mouse_check_button_pressed(mb_left);

//==============
//Definir com quem vai ligar
if (voltando == false){
    if (place_meeting(x, y, obj_lado2)){
        blocoLigado = instance_place(x, y,obj_lado2).blocoPai;
    }else{
        blocoLigado = noone;
    }
}
//=============================
//Seção de lidar caso tenha sido pego
if (pego == true){
    x = mouse_x;
    y = mouse_y;
    voltando = false;
    path_change_point(caminhoVolta, 1, x, y, 100);
    
}else{
    if (blocoLigado != noone){
        if(alocado == false){
            if(!audio_is_playing(sound_confirma)){
                audio_play_sound(sound_confirma, 1, false);
            }
        }
        ligado = true;
        alocado = true;
    }else{
        ligado = false;
        alocado = false;
        //=========================
        if (place_meeting(x, y, obj_areaProibida)){
            if (voltando == false){
                path_start(caminhoVolta, 100, path_action_stop, true);
                voltando = true;
            }else{
                if(x == xInicial &amp;&amp; y == yInicial){
                    voltando = false;
                }
        }
        }else{
            if(x == xInicial &amp;&amp; y == yInicial){
                voltando = false;
            }
        //============================    
        }  
    }
}

}
//=========================
//Seção ao estar alocado
if (alocado == true){
    x = blocoLigado.x;
    y = blocoLigado.y;
} 

x0SubConectores = x + 17 + 24;
y0SubConectores = y + sprite_get_height(spr_if) + sprite_get_height(spr_ifConector)/2 - 17



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Passar o seu comando para o conector

if (alocado == true){
    blocoLigado.conectado = true;
    blocoLigado.comandoConector = comando;
    blocoLigado.objConectado = self;
    if(vencer == true){
        depth = -6;
    }
    
}

show_debug_message("obj_blocoSe: alocado: " + string(alocado));
show_debug_message("obj_blocoSe: ligado: " + string(ligado));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Desenhar a barra final

draw_self();

if(qntdSubConectores &gt; 0){
    draw_sprite(spr_barrafFinalSe, 0, listaSubConectores[qntdSubConectores - 1].x - 17, listaSubConectores[qntdSubConectores - 1].y + sprite_get_height(spr_ifConector)/2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
